services:
  laravel-app:
    build:
      context: ./runarion-laravel
      dockerfile: dockerfile
    ports:
      - "${VITE_PORT:-5173}:5173"
      - "${LARAVEL_PORT:-8000}:8000"
      - "${REVERB_PORT:-8080}:8080"
    environment:
      APP_ENV: local
      APP_DEBUG: "true"
      APP_URL: ${APP_URL}
      DB_CONNECTION: ${DB_CONNECTION}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      PYTHON_SERVICE_URL: ${PYTHON_SERVICE_URL}
      APP_LOCALE: ${APP_LOCALE}
      APP_FALLBACK_LOCALE: ${APP_FALLBACK_LOCALE}
      APP_FAKER_LOCALE: ${APP_FAKER_LOCALE}
      PHP_CLI_SERVER_WORKERS: ${PHP_CLI_SERVER_WORKERS}
      BCRYPT_ROUNDS: ${BCRYPT_ROUNDS}
      VITE_PORT: ${VITE_PORT}
      VITE_HOST: ${VITE_HOST}
      VITE_SERVICE_URL: ${VITE_SERVICE_URL}
      BROADCAST_CONNECTION: ${BROADCAST_CONNECTION}
      REVERB_APP_ID: ${REVERB_APP_ID}
      REVERB_APP_KEY: ${REVERB_APP_KEY}
      REVERB_APP_SECRET: ${REVERB_APP_SECRET}
      REVERB_HOST: ${REVERB_HOST}
      REVERB_PORT: ${REVERB_PORT}
      REVERB_SCHEME: ${REVERB_SCHEME}
      VITE_REVERB_APP_KEY: ${VITE_REVERB_APP_KEY}
      VITE_REVERB_HOST: ${VITE_REVERB_HOST}
      VITE_REVERB_PORT: ${VITE_REVERB_PORT}
      VITE_REVERB_SCHEME: ${VITE_REVERB_SCHEME}
      NODE_OPTIONS: ${NODE_OPTIONS:-"--max_old_space_size=2048"}
      npm_config_cache: ${NPM_CONFIG_CACHE:-"/tmp/npm-cache"}
      CHOKIDAR_USEPOLLING: ${CHOKIDAR_USEPOLLING:-"true"}
      WATCHPACK_POLLING: ${WATCHPACK_POLLING:-"true"}
    volumes:
      - type: bind
        source: ./runarion-laravel
        target: /var/www/html
        consistency: delegated
      - type: volume
        source: node_modules
        target: /var/www/html/node_modules
      - type: volume
        source: vendor
        target: /var/www/html/vendor
    networks:
      - runarion-network
    depends_on:
      postgres-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${LARAVEL_PORT:-8000}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    logging:
      driver: ${LOG_DRIVER}
      options:
        max-size: ${LOG_MAX_SIZE}
        max-file: ${LOG_MAX_FILE}
    deploy:
      resources:
        limits:
          memory: ${LARAVEL_MEMORY_LIMIT}
        reservations:
          memory: ${LARAVEL_MEMORY_RESERVATION}
    command: >
      sh -c "npm install --verbose --legacy-peer-deps &&
             php artisan key:generate --force &&
             php artisan config:cache &&
             php artisan route:cache &&
             php artisan view:cache &&
             /bin/bash /var/www/html/docker-entrypoint.sh"
             
  python-app:
    build:
      context: ./runarion-python
      dockerfile: dockerfile
    ports:
      - "${PYTHON_PORT:-5000}:5000"
    environment:
      ENVIRONMENT: development
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_DATABASE: ${DB_DATABASE}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      DEEPSEEK_API_KEY: ${DEEPSEEK_API_KEY}
      GEMINI_MODEL_NAME: ${GEMINI_MODEL_NAME}
      OPENAI_MODEL_NAME: ${OPENAI_MODEL_NAME}
      DEEPSEEK_MODEL_NAME: ${DEEPSEEK_MODEL_NAME}
      FLASK_ENV: ${FLASK_ENV:-development}
      FLASK_DEBUG: ${FLASK_DEBUG:-"1"}
      PYTHONPATH: ${PYTHON_PYTHONPATH:-/app/src}
      PYTHONDONTWRITEBYTECODE: ${PYTHON_PYTHONDONTWRITEBYTECODE:-1}
      PYTHONUNBUFFERED: ${PYTHON_PYTHONUNBUFFERED:-1}
      UPLOAD_PATH: ${PYTHON_UPLOAD_PATH:-/app/uploads}
    volumes:
      - ./runarion-python/src:/app/src
      - ./runarion-python/tests:/app/tests
      - python_uploads:/app/uploads
      - ./runarion-python/requirements.txt:/app/requirements.txt
      - python_venv:/app/venv
    networks:
      - runarion-network
    depends_on:
      postgres-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://python-app:${PYTHON_PORT:-5000}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: ${LOG_DRIVER}
      options:
        max-size: ${LOG_MAX_SIZE}
        max-file: ${LOG_MAX_FILE}
    deploy:
      resources:
        limits:
          memory: ${PYTHON_MEMORY_LIMIT}
        reservations:
          memory: ${PYTHON_MEMORY_RESERVATION}
    command: ["/bin/bash", "/app/docker-entrypoint.sh"]
          
  postgres-db:
    build:
      context: .
      dockerfile: dockerfile
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_DB=${DB_DATABASE:-runarion}
      - POSTGRES_HOST_AUTH_METHOD=${POSTGRES_HOST_AUTH_METHOD:-scram-sha-256}
      - POSTGRES_INITDB_WALDIR=${POSTGRES_INITDB_WALDIR:-}
      - POSTGRES_INITDB_ARGS=${POSTGRES_INITDB_ARGS:-}
      - PG_MAJOR=${PG_MAJOR:-17}
      - PG_VERSION=${PG_VERSION:-17.4-1.pgdg120+2}
      - PGDATA=${PGDATA:-/var/lib/postgresql/data}
      - POSTGRES_GID=${POSTGRES_GID:-999}
      - POSTGRES_UID=${POSTGRES_UID:-999}
      - GOSU_VERSION=${GOSU_VERSION:-1.17}
      - LANG=${LANG:-en_US.utf8}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - runarion-network
    deploy:
      resources:
        limits:
          memory: ${POSTGRES_MEMORY_LIMIT:-1G}
        reservations:
          memory: ${POSTGRES_MEMORY_RESERVATION:-512M}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_DATABASE:-runarion}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  stable-diffusion:
    build:
      context: ./runarion-stable-diffusion
      dockerfile: dockerfile
    ports:
      - "${SD_API_PORT:-7860}:7860"
    env_file:
      - ./runarion-stable-diffusion/.env
    environment:
      - NVIDIA_VISIBLE_DEVICES=${NVIDIA_VISIBLE_DEVICES:-all}
      - NVIDIA_DRIVER_CAPABILITIES=${NVIDIA_DRIVER_CAPABILITIES:-compute,utility}
      - PYTHONPATH=${SD_PYTHONPATH:-/app/src}
      - PYTHONDONTWRITEBYTECODE=${SD_PYTHONDONTWRITEBYTECODE:-1}
      - PYTHONUNBUFFERED=${SD_PYTHONUNBUFFERED:-1}
    volumes:
      - ./runarion-stable-diffusion/models:/app/models
      - ./runarion-stable-diffusion/outputs:/app/outputs
      - ./runarion-stable-diffusion/inputs:/app/inputs
      - ./runarion-stable-diffusion/cache:/app/cache
      - sd_venv:/app/venv
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    networks:
      - runarion-network
    depends_on:
      postgres-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${SD_API_PORT:-7860}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    logging:
      driver: ${LOG_DRIVER}
      options:
        max-size: ${LOG_MAX_SIZE}
        max-file: ${LOG_MAX_FILE}
    runtime: nvidia

networks:
  runarion-network:
    driver: bridge

volumes:
  postgres_data:
  node_modules:
  vendor:
  python_venv:
  sd_venv:
  python_uploads:
